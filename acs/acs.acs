/**
 * Copyright (c) 2018 PROPHESSOR
 *
 * This software is released under the MIT License.
 * https://opensource.org/licenses/MIT
 */

#include "zcommon.acs"

Script "HeroicTaunt" NET {
	GiveInventory("HeroicTaunt", 1);
}

Script "HeroicKick" NET {
	GiveInventory("HeroicKick", 1);
}

Script "CustomTaunt" (int forcehero) NET {
	//print(s:"Force hero option: ", i:forcehero);
	if(!forcehero && CheckInventory("PROPHESSORTag") || forcehero == 1) {
		int tauntid = GetCVar("hod_customtaunt_prophessor");

		PlaySound(0, StrParam(s:"prophessor/taunt", i:tauntid), CHAN_NOPAUSE, 1.0);
	} else if(!forcehero && CheckInventory("IronDroogTag") || forcehero == 2) {
		int tauntid = GetCVar("hod_customtaunt_irondroog");

		PlaySound(0, StrParam(s:"irondroog/taunt", i:tauntid), CHAN_NOPAUSE, 1.0);
	} else if(!forcehero && CheckInventory("MarzoLeonTag") || forcehero == 3) {
		int tauntid = GetCVar("hod_customtaunt_marzoleon");

		PlaySound(0, StrParam(s:"marzoleon/taunt", i:tauntid), CHAN_NOPAUSE, 1.0);
	} else if(!forcehero && CheckInventory("NomakhTag") || forcehero == 5) {
		int tauntid = GetCVar("hod_customtaunt_nomakh");

		PlaySound(0, StrParam(s:"nomakh/taunt", i:tauntid), CHAN_NOPAUSE, 1.0);
	} else {
		print(s:"[Custom Taunt Script Error]: Unknown hero");
	}
}


function str heroPrefix(void) {
	if(CheckInventory("PROPHESSORTag")) {
	    return "prophessor";
    } else if(CheckInventory("IronDroogTag")) {
		return "irondroog";
	} else if(CheckInventory("MarzoLeonTag")) {
		return "marzoleon";
	} else if(CheckInventory("NomakhTag")) {
		return "nomakh";
	} else {
		print(s:"[heroPrefix Function Error]: Unknown hero");
	}
}


Script "LevelStatsNotifier" ENTER {
    /**
     * Taken from the Doom RPG Remake Project
     * Copyright (c) DRRP-Team 2017-2019
     */

    int  monsterstotal,
         secretstotal       = GetLevelInfo(LEVELINFO_TOTAL_SECRETS);

    bool monsters = false,
         secrets  = false;

    if (secretstotal == 0)  secrets = true;

    while (true) {
        monsterstotal       = GetLevelInfo(LEVELINFO_TOTAL_MONSTERS);

        int monsterskilled  = GetLevelInfo(LEVELINFO_KILLED_MONSTERS);
        int secretsfound    = GetLevelInfo(LEVELINFO_FOUND_SECRETS);

        if (monsterstotal && monsterskilled == monsterstotal && !monsters) {
            SetFont("BIGFONT");
            HudMessage("Sector clear!"; HUDMSG_TYPEON | HUDMSG_LOG, 18, CR_GRAY, 1.5, 0.82, 3.0, 0.005, 1.0);
            LocalAmbientSound(StrParam(s:heroPrefix(), s:"sectorclear"), 115);
            monsters = true;
        }

        if (secretsfound == secretstotal && !secrets) {
            SetFont("BIGFONT");
            HudMessage("You have found all secrets!"; HUDMSG_TYPEON | HUDMSG_LOG, 18, CR_GRAY, 1.5, 0.82, 3.0, 0.005, 1.0);
            LocalAmbientSound(StrParam(s:heroPrefix(), s:"secretsfound"), 115);
            secrets = true;
        }

        if (monsters && secrets) break;

        Delay(17);
    }
}

str lastweapon = "";

Script "GotoKick" (void) {
    lastweapon = GetWeapon();

    SetWeapon(StrParam(s:heroPrefix(), s:"kick"));
}

Script "ReturnKick" (void) {
    if (!strlen(lastweapon)) Terminate;

    SetWeapon(lastweapon);
}
